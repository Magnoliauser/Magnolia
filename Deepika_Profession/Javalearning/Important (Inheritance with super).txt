class Super_class {
   int num = 20;

   
   public void display() {
      System.out.println("This is the display method of superclass");
   }
}

public class Sub_class extends Super_class {
   int num = 10;

   
   public void display() {
      System.out.println("This is the display method of subclass");
   }

   public void my_method() {
      // Instantiating subclass
      Sub_class sub = new Sub_class();

      // Invoking the display() method of sub class
      sub.display();

      // Invoking the display() method of superclass
      super.display();

      
      System.out.println("value of the variable named num in sub class:"+ sub.num);

      
      System.out.println("value of the variable named num in super class:"+ super.num);
   }

   public static void main(String args[]) {
      Sub_class obj = new Sub_class();
      obj.my_method();
   }
}





class Vehicle {
  protected String brand = "Ford";  
  int b=10;
  public void honk() {                    
    System.out.println("Tuut, tuut!");
  }
}

class Main extends Vehicle {
    int b=20;
  private String modelName = "Mustang";  
  
  public void honk() {                    
    System.out.println("deep");
  }
  public void print(){
      System.out.println(super.b);
      System.out.println(b);
      honk();
      super.honk();
  }
  public static void main(String[] args) {

    
    Main myCar = new Main();

    
    myCar.honk();
    myCar.print();

    // Display the value of the brand attribute (from the Vehicle class) and the value of the modelName from the Car class
    System.out.println(myCar.brand + " " + myCar.modelName);
   // System.out.println(myCar.b + " " + super.b);
  }
}

class Super_class {
   int num = 20;
   public void display() {
      System.out.println("This is the display method of superclass");
   }
}

public class Main extends Super_class {
   int num = 10;
   public void display() {
      System.out.println("This is the display method of subclass");
   }
public void my_method() {
      
      obj.display();
      /*--This throw error beacuse object is not need to access same methods
      
      display();
      super.display();
      System.out.println("value of the variable named num in sub class:"+ num);
      System.out.println("value of the variable named num in super class:"+ super.num);
   }
   public static void main(String args[]) {
      Main obj = new Main();
      obj.my_method();
   }
}

NOTE:
Super keyword not supported in static method .Hence create one more non static method and call the overriding 
values through super keyword